# Generated by Django 5.2.6 on 2025-10-02 12:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('base_margin', models.FloatField(default=0.0)),
                ('description', models.TextField(blank=True)),
                ('attributes', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarginCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('base_margin', models.FloatField()),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarketItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('exclude_keywords', models.JSONField(blank=True, help_text='List of keywords to ignore when scraping/creating listings', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PawnShopAgreement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agreement_number', models.CharField(max_length=50, unique=True)),
                ('created_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('previous_agreements', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.CharField(max_length=100)),
                ('customer', models.CharField(max_length=255)),
                ('days_gone_past_expiry', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarginRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_type', models.CharField(choices=[('manufacturer', 'Manufacturer'), ('model', 'Model'), ('condition', 'Condition'), ('demand', 'Demand'), ('feature', 'Feature')], max_length=20)),
                ('match_value', models.CharField(max_length=100)),
                ('adjustment', models.FloatField()),
                ('description', models.CharField(blank=True, max_length=200)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='pricing.category')),
            ],
            options={
                'ordering': ['category', 'order', 'rule_type'],
            },
        ),
        migrations.CreateModel(
            name='CompetitorListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competitor', models.CharField(choices=[('CeX', 'CeX'), ('CashConverters', 'CashConverters'), ('CashGenerator', 'CashGenerator'), ('eBay', 'eBay')], max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('price', models.FloatField()),
                ('url', models.URLField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('store_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('market_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='pricing.marketitem')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('buyback_storage', 'Buyback Storage'), ('free_stock', 'Free Stock'), ('sold', 'Sold'), ('reserved', 'Reserved')], default='buyback_storage', max_length=50)),
                ('buyback_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('suggested_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('final_listing_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items', to='pricing.category')),
                ('market_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items', to='pricing.marketitem')),
                ('agreement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='pricing.pawnshopagreement')),
            ],
        ),
        migrations.CreateModel(
            name='PriceAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reasoning', models.TextField()),
                ('suggested_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('confidence', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_analyses', to='pricing.inventoryitem')),
            ],
        ),
        migrations.CreateModel(
            name='WebListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listed_by', models.CharField(max_length=255)),
                ('first_uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('update_count', models.PositiveIntegerField(default=0)),
                ('epos_listing_url', models.URLField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('ended', 'Ended'), ('removed', 'Removed')], default='active', max_length=50)),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='web_listings', to='pricing.inventoryitem')),
            ],
        ),
    ]
